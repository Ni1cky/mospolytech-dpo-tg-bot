from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, BotCommand

from bot.handlers.keyboards import after_start_keyboard
from bot.handlers.faq import faq_router, faq_command_handler


commands_router = Router()

ALL_COMMANDS = [
    BotCommand(command="start", description="–ù–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ"),
    BotCommand(command="documents", description="–ó–∞–ø–æ–ª–Ω–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã"),
    BotCommand(command="programs", description="–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã"),
    BotCommand(command="advice", description="–ü–æ–¥–æ–±—Ä–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É"),
    BotCommand(command="cancel", description="–û—Ç–º–µ–Ω–∏—Ç—å"),
    BotCommand(command="faq", description="–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã"),
]


@commands_router.message(CommandStart())
async def command_start_handler(message: Message, state: FSMContext) -> None:
    await state.clear()
    await message.answer(
        text=
        "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —É–∑–Ω–∞—Ç—å –æ –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è (–î–ü–û):\n\n"
        "<b>üîπ –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º</b>\n"
        "–£–∑–Ω–∞–π—Ç–µ –æ –∫—É—Ä—Å–∞—Ö –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è —Å–µ–±—è.\n\n"
        "<b>üîπ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤—ã–±–æ—Ä—É –ø—Ä–æ–≥—Ä–∞–º–º—ã</b>\n"
        "–ü–æ–ª—É—á–∏—Ç–µ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ –∫—É—Ä—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø–æ–ª–µ–∑–Ω—ã –∏–º–µ–Ω–Ω–æ –≤–∞–º.\n\n"
        "<b>üîπ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞—è–≤–ª–µ–Ω–∏—è –∏ –¥–æ–≥–æ–≤–æ—Ä–∞</b>\n"
        "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏ –ø–æ–ª—É—á–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Word.\n\n"
        "<b>üîπ–û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã.\n"
        "–ü–æ–ª—É—á–∏—Ç–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã </b>",
        reply_markup=after_start_keyboard()
    )


@commands_router.message(Command("cancel"))
async def cancel_command_handler(message: Message, state: FSMContext) -> None:
    await state.clear()
    await message.answer(
        text="–¢–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞  –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
        reply_markup=after_start_keyboard()
    )


@commands_router.message(F.text.in_({"üìä –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–≥—Ä–∞–º–º"}))
@commands_router.message(Command("programs", "advice"))
async def not_implemented_commands_handler(message: Message) -> None:
    await message.answer("–ü–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ")
    # TODO: —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É cancel. –û–Ω–∞ –¥–æ–ª–∂–Ω–∞ –æ—Ç–º–µ–Ω—è—Ç—å –ª—é–±–æ–π —Ç–µ–∫—É—â–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π


@faq_router.message(F.text == "‚ùì FAQ")
async def faq_button_handler(message: Message):
    await faq_command_handler(message)