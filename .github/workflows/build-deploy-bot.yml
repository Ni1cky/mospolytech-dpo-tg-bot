name: Build and Push DPO Telegram Bot
run-name: Bot Deployment triggered by ${{ github.actor }}

env:
  IMAGE_NAME: dpo_telegram_bot
  # if problem with docker: sudo chown $USER /var/run/docker.sock

on:
  workflow_dispatch:  # This makes the workflow manual
  push:

jobs:
  build:
    name: Build DPO TGBOT Image
    runs-on: [self-hosted]
    if: startsWith(github.event.head_commit.message, 'Deploy.')  # Deploy only if commit message starts with "Deploy. "
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker Image Locally
        run: |
          docker build --build-arg TG_TOKEN=${{ secrets.TG_BOT_TOKEN }} -t ${{ env.IMAGE_NAME }} -f ./Dockerfile .

  deploy:
    name: Deploy Docker Container
    runs-on: [self-hosted]
    needs: build
    if: startsWith(github.event.head_commit.message, 'Deploy. ')
    steps:
      - name: Stop and Remove Old Container
        run: |
          if [ "$(docker ps -a -q -f name=tg_bot_dpo)" ]; then
            docker stop tg_bot_dpo
            docker rm tg_bot_dpo
          fi

      - name: Remove Old Image
        run: |
          if [ "$(docker images -q ${{ env.IMAGE_NAME }})" ]; then
            docker rmi ${{ env.IMAGE_NAME }}
          fi

      - name: Deploy Container
        run: |
          docker run -d --name tg_bot_dpo --restart always --network tgnetwork -e TG_TOKEN=${{ secrets.TG_BOT_TOKEN }} ${{ env.IMAGE_NAME }}
