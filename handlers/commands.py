from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from handlers.keyboards import after_start_keyboard


commands_router = Router()


@commands_router.message(CommandStart())
async def command_start_handler(message: Message, state: FSMContext) -> None:
    await state.clear()
    await message.answer(
        text=
        "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —É–∑–Ω–∞—Ç—å –æ –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è (–î–ü–û):\n\n"
        "<b>üîπ –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º</b>\n"
        "–£–∑–Ω–∞–π—Ç–µ –æ –∫—É—Ä—Å–∞—Ö –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è —Å–µ–±—è.\n\n"
        "<b>üîπ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤—ã–±–æ—Ä—É –ø—Ä–æ–≥—Ä–∞–º–º—ã</b>\n"
        "–ü–æ–ª—É—á–∏—Ç–µ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ –∫—É—Ä—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø–æ–ª–µ–∑–Ω—ã –∏–º–µ–Ω–Ω–æ –≤–∞–º.\n\n"
        "<b>üîπ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞—è–≤–ª–µ–Ω–∏—è –∏ –¥–æ–≥–æ–≤–æ—Ä–∞</b>\n"
        "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏ –ø–æ–ª—É—á–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Word.",
        reply_markup=after_start_keyboard()
    )


@commands_router.message(F.text.in_({"üìä –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–≥—Ä–∞–º–º"}))
@commands_router.message(Command("programs", "advice"))
async def not_implemented_commands_handler(message: Message) -> None:
    await message.answer("–ü–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ")
